git --version 	버젼 확인

git config -l
현재 config 설정 상태 확인

git config --global user.name ~~~	 	pc 전체 계정 셋팅
git config --global user.email ~~~		pc 전체 계정 메일 셋팅
git config --global pull.rebase true 		pull 방식을 merge가 아닌 rebase로 설정한다
git config --global pull.rebase false		pull 방식을 rebase가 아닌 merge로 설정한다
git clone ~~https주소~~		현재 위치에 깃 저장소 전체 복사해오기

git remote add ~~원격저장소 별명으로 지을 이름~~ ~~https주소~~~ 	원격 저장소 설정 및 별명 설정
git remote -v 	원격저장소 전체 목록 연결 주소 정보
git remote show ~~별명~~		원격저장소 정보
git remote rename  ~~원래 별명~~ ~~새 별명~~	원격저장소 별명 변경
git remote remove 또는 rm ~~별명~~ 	원격저장소 삭제
git push --set-upstream  ~~~별명 ~~~ 브랜치(master)~~~ 	기본 push 경로 설정

git branch 	브랜치 목록
git branch ~~~	브랜치 생성
git branch -d ~~~ 	브랜치 삭제

cd d:/git/ ~~~
git add ~~~	 애드 후
git add . 		수정된 내용 전체 add
git commit -m"~~~" 	커밋 메세지와 함께 커밋 후
git commit -a 	커밋 메세지 입력 창으로 이동, 메세지를 쓰고 esc, :wq (write & quit)를 사용해 탈출
git push 		푸시


git status 	변경된 내용이 add 해서 스테이지에 가있는지. 그래서 그 내용이 commit이 되어있는지

git log 	commit log 출력
git reflog	reset 했던 log 출력

git reset 	~~~ 	add 된 내용을 스테이지에서 내리기
git reset HEAD^	현재 커밋이 아닌 바로 전 단계 커밋으로 돌아간다
git reset HEAD@{n}	실수록 또는 필요 이상으로 reset 했을 경우 git reflog에서 출력된 n번쨰 커밋으로 돌아간다 
git reset --hard	수정중이었던 내용을 모두 지우고 add 된 내용을 스테이지에서 내리기. 이후 git pull 하여 최신화

또는 git reset -- hard 버젼명 		커밋했던 내역들이 언스테이징 되고 목표 버젼으로 돌아간다



git pull: 리모트 레포지토리의 브랜치를 검토 않고 바로 합칠 때
git fetch: 리모트 레포지토리의 브랜치를 검토해야할 때


https://github.com/hikochoco/cooking.git

초기 셋팅
git fork tool 설치
file - clone
file - init new repository[원하는 위치(cooking 폴더)에서]
git config --global pull.rebase true
git config --global init.defaultBranch main
커밋, 푸시, 풀 테스트 해보고 브랜치 나눠지면 fork tool에서 해당 브랜치 우클릭 - merge